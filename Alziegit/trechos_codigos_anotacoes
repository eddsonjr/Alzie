/*Abaixo funcoes para manipular a camera*/
///funcao para acionar a camera e bater foto
func TirarFoto(){
if hasCam {
var imagePicker = UIImagePickerController()
imagePicker.delegate = self
imagePicker.sourceType = UIImagePickerControllerSourceType.Camera;
imagePicker.allowsEditing = false
self.presentViewController(imagePicker, animated: true, completion: nil)
}else{
let noCamAlert: UIAlertView = UIAlertView(title: "Câmera", message: "Seu dispositivo não tem suporte a câmera", delegate: self, cancelButtonTitle: "ok")
noCamAlert.show()
}
}




/*As funcoes abaixo podem ser usadas para trabalho no projeto principal em si e  tambem de testes*/

///funcao para trabalhar com o controlador e o delegate da cambera
//    func imagePickerController(picker: UIImagePickerController, didFinishPickingImage image: UIImage!, editingInfo: [NSObject : AnyObject]!) {
//        self.imageViewTest.image = image
//        self.imageViewTest2.image = image
//        self.imageViewTest3.image = image
//        self.dismissViewControllerAnimated(true, completion: nil);
//    }




///Esta funcao serve para salvar os dados de um album no banco
//    func salvarAlbum(){
//
//        var album : AlbumEntes = AlbumEntes()
//        var fotoDoAlbum: FotosDoAlbum = FotosDoAlbum()
//
//        var UIImageToNSData = UIImagePNGRepresentation(imageViewTest.image!)
//        album.fotoAvatar = UIImageToNSData
//
//
//        //setando a foto para ser salva no banco
//        fotoDoAlbum.legendaDaFoto = "LegendaTest"
//        fotoDoAlbum.foto = album.fotoAvatar
//
//
//        //setando os dados no banco
//        album.fotoAvatar = UIImageToNSData
//        album.NomeEnteLegenda = "Edson Jr"
//        album.grauParentescoLegenda = "Filho"
//        album.listaFotosDoAlbum.append(fotoDoAlbum)
//
//
//        var dao: AlbumDAO = AlbumDAO()
//        dao.salvarAlbum(album)
//
//        qtAlbunsCadastrados()
//
//    }
//
//    func qtAlbunsCadastrados() {
//        var dao: AlbumDAO = AlbumDAO()
//        self.qtAlbunsSalvosTestLabel.text = String(dao.retornarQuantidadeAlbunsNaBase())
//    }
//
//
//
//    func retornarDados(){
//        var dao: AlbumDAO = AlbumDAO()
//        var album : AlbumEntes = dao.listarTodosAlbuns().first!
//
//
//        if(dao.retornarQuantidadeAlbunsNaBase() > 0) {
//            self.imageViewTest.image = UIImage(data: album.fotoAvatar!)
//          //  self.imageViewTest2.image = UIImage(data: (album.listaFotosDoAlbum.first?.foto)!)
//          //  self.imageViewTest3.image = UIImage(data: (album.listaFotosDoAlbum.first?.foto)!)
//            self.legendaFoto1.text = album.listaFotosDoAlbum.last?.legendaDaFoto
//            self.legendaFoto2.text = album.listaFotosDoAlbum.last?.legendaDaFoto
//
//        }
//
//    }
//






@IBAction func SalvarAlbumTestBTN(sender: AnyObject) {
salvarAlbum()
}



@IBAction func SalvarFotosNoAlbumTest(sender: AnyObject) {

}






/*Abaixo estao os metodos responsaveis por salvar os dados no banco e tambem carregar as informacoes do banco*/
func salvarAlbum() {
var album : AlbumEntes = AlbumEntes()


}













//
//        var childControllers = self.childViewControllers
//
//        if childControllers.count != 0{
//            for controller in childControllers{
//
//                if (controller.getViewID() == "algumacoisa"){
//                    let alerta: UIAlertView = UIAlertView(title: "teste", message: "Verificando qual é ", delegate: self, cancelButtonTitle: "ok")
//                    alerta.show()
//
//                }
//
//            }
//        }






//
//    override func getViewID() -> String{
//        return "childNameHere"
//    }






















var childControllers = self.childViewControllers

if childControllers.count != 0{
for controller in childControllers{

if (controller.getViewID() == "algumacoisa"){
//do something.
}

}
}













@IBAction func salvarAlbumNavBTN(sender: AnyObject) {

if(self.addPessoasContainer?.nomePessoaAdicionarTextEdit == nil || (self.addPessoasContainer?.nomePessoaAdicionarTextEdit.text?.isEmpty)!){
self.alerta = UIAlertView(title: "Atenção", message: "Você deve digitar um nome para a pessoa", delegate: self, cancelButtonTitle: "Ok")



}else{
print("Passou no iF do nome da pessoa vazio")
self.album.NomeEnteLegenda = self.addPessoasContainer?.nomePessoaAdicionarTextEdit.text

self.nomeParenteNaoNulo = true

}


if(self.addPessoasContainer?.grauParetescoPessoaTextEdit == nil || (self.addPessoasContainer?.grauParetescoPessoaTextEdit.text?.isEmpty)!){

self.alerta = UIAlertView(title: "Atenção", message: "Você deve digitar o grau de parentesco dessa pessoa com o paciente", delegate: self, cancelButtonTitle: "Ok")
}else{

self.album.grauParentescoLegenda = self.addPessoasContainer?.grauParetescoPessoaTextEdit.text

self.grauParentescoNaoNulo = true
}


self.album.fotoAvatar = self.addPessoasContainer?.fotoTiradaConvertidaNSDATA
self.album.notasPessoa = self.addPessoasContainer?.notasPessoaAdicionarTextArea.text



print("Dados salvos!")

if (self.nomeParenteNaoNulo && self.grauParentescoNaoNulo) {
self.alerta = UIAlertView(title: "Dados Salvos", message: "Album Salvo com sucesso", delegate: self, cancelButtonTitle: "Ok")
self.alerta?.show()

//agora salvando diretamente no banco
DAO.salvarAlbum(self.album)

}


}















//
//  AddFotosAlbumCollectionViewController.swift
//  Alziegit
//
//  Created by Edson  Jr on 07/07/16.
//  Copyright © 2016 Edson  Jr. All rights reserved.
//

import UIKit

class AddFotosAlbumCollectionViewController: UIViewController,UICollectionViewDelegateFlowLayout, UICollectionViewDataSource {


//variavel da celula da collectionView
let reuserIdentifier  = "addFotoColecoVCell"


//variavel do tipo imagem que representa a imagem da celula
var fotoParaCell: UIImage?

//variaveis de deimensoes
var screenSize: CGRect!
var screenWidth: CGFloat!
var screenHeight: CGFloat!



override func viewDidLoad() {
super.viewDidLoad()

//pegando as proporcoes da tela para configurar o tamanho da tela
screenSize = UIScreen.mainScreen().bounds
screenWidth = screenSize.width
screenHeight = screenSize.height

}

override func didReceiveMemoryWarning() {
super.didReceiveMemoryWarning()
// Dispose of any resources that can be recreated.
}





/*
// MARK: - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
// Get the new view controller using segue.destinationViewController.
// Pass the selected object to the new view controller.
}
*/




func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
return 10
}

func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {


let cell = collectionView.dequeueReusableCellWithReuseIdentifier(reuserIdentifier, forIndexPath: indexPath) as! addFotoCVCell

//configurando as dimensoes da celula
cell.layer.borderColor = UIColor.blackColor().CGColor
cell.layer.borderWidth = 2
cell.layer.cornerRadius = 10
cell.frame.size.width = screenWidth / 4.3
cell.frame.size.height = screenWidth / 4.3


//configurando os elementos que irao aparecer na celula
cell.fotoAddCell.image = fotoParaCell
cell.labelFotoAddCell.text = "Teste"

return cell
}

}





/*Implementando uma classe que herda as caracteristicas da celula*/
class addFotoCVCell: UICollectionViewCell{

@IBOutlet weak var fotoAddCell: UIImageView!
@IBOutlet weak var labelFotoAddCell: UILabel!

}




FICHA MEDICA
FOTO, NOME, TIPO SANGUINEO, (2X) TELEFONES PARA EMERGENCIA, PROBLEMAS DE SAUDE, MEDICAMENTEOS, ALERGIAS

























//adicionando os botoes
let salvarLegendaButton = UIAlertAction(title: "Colocar Legenda", style: UIAlertActionStyle.Default) {
UIAlertAction in
print("Salvando legenda... Conteudo: \(self.legendaInserida)")
self.fotosDoAlbum.legendaDaFoto = self.legendaInserida


}

let descartarLegenda = UIAlertAction(title: "Não salvar Legenda", style: UIAlertActionStyle.Default) {
UIAlertAction in
print("Descartando legenda...")
self.legendaInserida = ""
self.fotosDoAlbum.legendaDaFoto = self.legendaInserida


}


alertaLegenda.addAction(salvarLegendaButton)
alertaLegenda.addAction(descartarLegenda)
























//funcao para permitir colocar uma legenda na foto assim que ela for registrada
func colocarLegendaNaFoto() -> String{
print("Inserindo legenda...")
var legendaInserida: String?

let alertaLegenda: UIAlertController = UIAlertController(title: "Adicionar Legenda a foto", message: "Você pode adicionar uma legenda a sua foto caso queira.", preferredStyle: .Alert)

//adicionado o text field e o button neste alerta
alertaLegenda.addTextFieldWithConfigurationHandler({ (textField) -> Void in
textField.placeholder = "Insira uma legenda, caso queira"
legendaInserida = textField.text!
})


//adicionando os botoes
let salvarLegendaButton = UIAlertAction(title: "Colocar Legenda", style: UIAlertActionStyle.Default) {
UIAlertAction in
print("Salvando legenda... Conteudo: \(legendaInserida)")


}

let descartarLegenda = UIAlertAction(title: "Não salvar Legenda", style: UIAlertActionStyle.Default) {
UIAlertAction in
print("Descartando legenda...")
legendaInserida = ""
}


alertaLegenda.addAction(salvarLegendaButton)
alertaLegenda.addAction(descartarLegenda)


//mostrando na tela o alerta
self.presentViewController(alertaLegenda, animated: true, completion: nil)

return legendaInserida!

}








//funcao para permitir colocar uma legenda na foto assim que ela for registrada
func colocarLegendaNaFoto() -> String{
print("Inserindo legenda...")
var legendaInserida: String?

let alertaLegenda: UIAlertController = UIAlertController(title: "Adicionar Legenda a foto", message: "Você pode adicionar uma legenda a sua foto caso queira.", preferredStyle: .Alert)

//adicionado o text field e o button neste alerta
alertaLegenda.addTextFieldWithConfigurationHandler({ (textField) -> Void in
textField.placeholder = "Insira uma legenda, caso queira"
legendaInserida = textField.text!
})


//adicionando os botoes
let salvarLegendaButton = UIAlertAction(title: "Colocar Legenda", style: UIAlertActionStyle.Default) {
UIAlertAction in
print("Salvando legenda... Conteudo: \(legendaInserida)")


}

let descartarLegenda = UIAlertAction(title: "Não salvar Legenda", style: UIAlertActionStyle.Default) {
UIAlertAction in
print("Descartando legenda...")
legendaInserida = ""
}


alertaLegenda.addAction(salvarLegendaButton)
alertaLegenda.addAction(descartarLegenda)


//mostrando na tela o alerta
self.presentViewController(alertaLegenda, animated: true, completion: nil)

return legendaInserida!

}



